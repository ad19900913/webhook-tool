version: '3.8'

services:
  webhook-tool:
    build: .
    container_name: webhook-tool
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
    volumes:
      # 持久化日志数据
      - webhook-logs:/app/logs
      # 持久化配置文件
      - webhook-config:/app/config
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - webhook-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webhook.rule=Host(`webhook.yourdomain.com`)"
      - "traefik.http.services.webhook.loadbalancer.server.port=3000"

  # 可选：Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: webhook-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - webhook-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-webhook123}

  # 可选：Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: webhook-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    restart: unless-stopped
    networks:
      - webhook-network
    depends_on:
      - webhook-tool

volumes:
  webhook-logs:
    driver: local
  webhook-config:
    driver: local
  redis-data:
    driver: local
  nginx-logs:
    driver: local

networks:
  webhook-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
